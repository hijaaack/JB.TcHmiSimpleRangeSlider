{
    "$schema": "../../TcHmiFramework/Schema/ControlDescription.Schema.json",
    "apiVersion": 1,
    "name": "TcHmiFileExplorer",
    "namespace": "TcHmi.Controls.Beckhoff",
    "displayName": "File Explorer",
    "version": {
        "full": "1.12.760.37",
        "major": 1,
        "minor": 12,
        "build": 760,
        "revision": 37
    },
    "visible": true,
    "themeable": "Standard",
    "base": "TcHmi.Controls.System.TcHmiControl",
    "description": "Browse, copy and move files on the server, down- and upload files from and to the server.",
    "defaultDesignerEvent": "",
    "properties": {
        "containerControl": false,
        "geometry": {
            "width": 650,
            "height": 400
        }
    },
    "icons": [
        {
            "name": "Icons/16x16.png",
            "width": 16,
            "height": 16
        }
    ],
    "template": "Template.html",
    "dependencyFiles": [
        {
            "name": "Style.css",
            "type": "Stylesheet",
            "description": ""
        },
        {
            "name": "TcHmiFileExplorer.js",
            "type": "JavaScript",
            "description": ""
        }
    ],
    "themes": {
        "Base": {
            "resources": [
                {
                    "name": "Themes/Base/Style.css",
                    "type": "Stylesheet",
                    "description": ""
                }
            ]
        },
        "Base-Dark": {
            "resources": [
                {
                    "name": "Themes/Base-Dark/Style.css",
                    "type": "Stylesheet",
                    "description": ""
                }
            ]
        }
    },
    "attributes": [
        {
            "name": "data-tchmi-root",
            "propertyName": "Root",
            "propertySetterName": "setRoot",
            "propertyGetterName": "getRoot",
            "displayName": "Root",
            "visible": true,
            "displayPriority": 10,
            "type": "tchmi:general#/definitions/String",
            "category": "Common",
            "themeable": "Advanced",
            "description": "The root folder, from which to explore files. It is not possible to navigate above the root folder.",
            "readOnly": false,
            "bindable": true,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": "/"
        },
        {
            "name": "data-tchmi-path",
            "propertyName": "Path",
            "propertySetterName": "setPath",
            "propertyGetterName": "getPath",
            "displayName": "Path",
            "visible": true,
            "displayPriority": 11,
            "type": "tchmi:general#/definitions/String",
            "category": "Common",
            "themeable": "Advanced",
            "description": "The current path. The path is always relative to the configured root, but cannot refer to parent directories of root.",
            "readOnly": false,
            "bindable": true,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": ""
        },
        {
            "name": "data-tchmi-full-path",
            "propertyName": "FullPath",
            "propertyGetterName": "getFullPath",
            "displayName": "FullPath",
            "visible": true,
            "type": "tchmi:general#/definitions/String",
            "category": "Common",
            "description": "The full path, including root.",
            "readOnly": true,
            "bindable": false,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": ""
        },
        {
            "name": "data-tchmi-selected-items",
            "propertyName": "SelectedItems",
            "propertyGetterName": "getSelectedItems",
            "displayName": "SelectedItems",
            "visible": true,
            "type": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiFileExplorer.NameArray",
            "category": "Common",
            "description": "An array containing the names of the currently selected items.",
            "readOnly": true,
            "bindable": false,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": ""
        },
        {
            "name": "data-tchmi-server-interval",
            "propertyName": "ServerInterval",
            "propertySetterName": "setServerInterval",
            "propertyGetterName": "getServerInterval",
            "displayName": "ServerInterval",
            "visible": true,
            "displayPriority": 60,
            "type": "tchmi:general#/definitions/Number",
            "category": "Common",
            "themeable": "Advanced",
            "description": "Sets the interval for the ListFiles subscription in milliseconds. If left empty the websocketIntervalTime defined in tchmiconfig.json will be used.",
            "readOnly": false,
            "bindable": true,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": null
        },
        {
            "name": "data-tchmi-menu-bar-position",
            "propertyName": "MenuBarPosition",
            "propertySetterName": "setMenuBarPosition",
            "propertyGetterName": "getMenuBarPosition",
            "displayName": "MenuBarPosition",
            "visible": true,
            "displayPriority": 10,
            "type": "tchmi:framework#/definitions/TcHmi.Controls.Beckhoff.TcHmiFileExplorer.MenuBarPosition",
            "category": "Menu Bar",
            "themeable": "Standard",
            "description": "Whether to display the menu bar at the top or bottom of the control.",
            "readOnly": false,
            "bindable": true,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": "Top"
        },
        {
            "name": "data-tchmi-menu-bar-height",
            "propertyName": "MenuBarHeight",
            "propertySetterName": "setMenuBarHeight",
            "propertyGetterName": "getMenuBarHeight",
            "displayName": "MenuBarHeight",
            "visible": true,
            "displayPriority": 11,
            "type": "tchmi:framework#/definitions/MeasurementValue",
            "category": "Menu Bar",
            "themeable": "Standard",
            "description": "The height of the menu bar.",
            "readOnly": false,
            "bindable": true,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": 30
        },
        {
            "name": "data-tchmi-menu-bar-height-unit",
            "propertyName": "MenuBarHeightUnit",
            "propertyGetterName": "getMenuBarHeightUnit",
            "displayName": "MenuBarHeightUnit",
            "refTo": "MenuBarHeight",
            "visible": true,
            "displayPriority": 11,
            "type": "tchmi:framework#/definitions/PixelUnit",
            "category": "Menu Bar",
            "description": "The height unit of the menu bar.",
            "readOnly": true,
            "bindable": false,
            "defaultBindingMode": "OneWay",
            "heritable": true,
            "defaultValue": null,
            "defaultValueInternal": "px"
        }
    ],
    "attributeCategories": [
        {
            "name": "Menu Bar",
            "displayPriority": 500,
            "description": "Attributes to define the layout of the menu bar."
        }
    ],
    "functions": [],
    "events": [
        {
            "name": ".onPathChanged",
            "displayName": ".onPathChanged",
            "visible": true,
            "displayPriority": 5,
            "category": "Operator",
            "description": "The onPathChanged event is fired when the full path changes.",
            "heritable": true
        },
        {
            "name": ".onSelectionChanged",
            "displayName": ".onSelectionChanged",
            "visible": true,
            "displayPriority": 6,
            "category": "Operator",
            "description": "The onSelectionChanged event is fired when one or more items are selected or deselected.",
            "heritable": true
        }
    ],
    "access": [
        {
            "name": "create",
            "displayName": "Create",
            "description": "Controls the ability to create folders and upload files. This defaults to true.",
            "visible": true,
            "defaultValueInternal": true,
            "dependsOn": [
                "operate"
            ]
        },
        {
            "name": "rename",
            "displayName": "Rename",
            "description": "Controls the ability to rename files and folders. This defaults to true.",
            "visible": true,
            "defaultValueInternal": true,
            "dependsOn": [
                "operate"
            ]
        },
        {
            "name": "delete",
            "displayName": "Delete",
            "description": "Controls the ability to delete files and folders. This defaults to true.",
            "visible": true,
            "defaultValueInternal": true,
            "dependsOn": [
                "operate"
            ]
        },
        {
            "name": "download",
            "displayName": "Download",
            "description": "Controls the ability to download files. This defaults to true.",
            "visible": true,
            "defaultValueInternal": true,
            "dependsOn": [
                "operate"
            ]
        },
        {
            "name": "cut",
            "displayName": "Cut",
            "description": "Internal access right used for the cut button.",
            "visible": false,
            "defaultValueInternal": true,
            "dependsOn": [
                "delete",
                "create"
            ]
        }
    ],
    "dataTypes": [
        {
            "schema": "Schema/Types.Schema.json"
        }
    ],
    "languages": {
        "en": "Lang/en.json",
        "de": "Lang/de.json"
    }
}